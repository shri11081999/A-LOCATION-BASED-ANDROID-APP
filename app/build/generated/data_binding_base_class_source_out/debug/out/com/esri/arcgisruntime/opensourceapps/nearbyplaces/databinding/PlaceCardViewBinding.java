// Generated by view binder compiler. Do not edit!
package com.esri.arcgisruntime.opensourceapps.nearbyplaces.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.esri.arcgisruntime.opensourceapps.nearbyplaces.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlaceCardViewBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout bottomCardView;

  @NonNull
  public final LinearLayout linkLayout;

  @NonNull
  public final TextView placeAddress;

  @NonNull
  public final TextView placeName;

  @NonNull
  public final TextView placePhone;

  @NonNull
  public final TextView placeType;

  @NonNull
  public final ImageView placeTypeIcon;

  @NonNull
  public final TextView placeUrl;

  private PlaceCardViewBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout bottomCardView,
      @NonNull LinearLayout linkLayout, @NonNull TextView placeAddress, @NonNull TextView placeName,
      @NonNull TextView placePhone, @NonNull TextView placeType, @NonNull ImageView placeTypeIcon,
      @NonNull TextView placeUrl) {
    this.rootView = rootView;
    this.bottomCardView = bottomCardView;
    this.linkLayout = linkLayout;
    this.placeAddress = placeAddress;
    this.placeName = placeName;
    this.placePhone = placePhone;
    this.placeType = placeType;
    this.placeTypeIcon = placeTypeIcon;
    this.placeUrl = placeUrl;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlaceCardViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlaceCardViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.place_card_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlaceCardViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      FrameLayout bottomCardView = (FrameLayout) rootView;

      id = R.id.linkLayout;
      LinearLayout linkLayout = rootView.findViewById(id);
      if (linkLayout == null) {
        break missingId;
      }

      id = R.id.placeAddress;
      TextView placeAddress = rootView.findViewById(id);
      if (placeAddress == null) {
        break missingId;
      }

      id = R.id.placeName;
      TextView placeName = rootView.findViewById(id);
      if (placeName == null) {
        break missingId;
      }

      id = R.id.placePhone;
      TextView placePhone = rootView.findViewById(id);
      if (placePhone == null) {
        break missingId;
      }

      id = R.id.placeType;
      TextView placeType = rootView.findViewById(id);
      if (placeType == null) {
        break missingId;
      }

      id = R.id.placeTypeIcon;
      ImageView placeTypeIcon = rootView.findViewById(id);
      if (placeTypeIcon == null) {
        break missingId;
      }

      id = R.id.placeUrl;
      TextView placeUrl = rootView.findViewById(id);
      if (placeUrl == null) {
        break missingId;
      }

      return new PlaceCardViewBinding((FrameLayout) rootView, bottomCardView, linkLayout,
          placeAddress, placeName, placePhone, placeType, placeTypeIcon, placeUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
