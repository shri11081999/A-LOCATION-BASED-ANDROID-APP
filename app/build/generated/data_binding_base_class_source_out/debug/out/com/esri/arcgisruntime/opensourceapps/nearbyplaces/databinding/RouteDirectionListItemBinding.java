// Generated by view binder compiler. Do not edit!
package com.esri.arcgisruntime.opensourceapps.nearbyplaces.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.esri.arcgisruntime.opensourceapps.nearbyplaces.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RouteDirectionListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView directionsLengthTextview;

  @NonNull
  public final ImageView directionsManeuverImageview;

  @NonNull
  public final TextView directionsTextTextview;

  private RouteDirectionListItemBinding(@NonNull LinearLayout rootView,
      @NonNull TextView directionsLengthTextview, @NonNull ImageView directionsManeuverImageview,
      @NonNull TextView directionsTextTextview) {
    this.rootView = rootView;
    this.directionsLengthTextview = directionsLengthTextview;
    this.directionsManeuverImageview = directionsManeuverImageview;
    this.directionsTextTextview = directionsTextTextview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RouteDirectionListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RouteDirectionListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.route_direction_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RouteDirectionListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.directions_length_textview;
      TextView directionsLengthTextview = rootView.findViewById(id);
      if (directionsLengthTextview == null) {
        break missingId;
      }

      id = R.id.directions_maneuver_imageview;
      ImageView directionsManeuverImageview = rootView.findViewById(id);
      if (directionsManeuverImageview == null) {
        break missingId;
      }

      id = R.id.directions_text_textview;
      TextView directionsTextTextview = rootView.findViewById(id);
      if (directionsTextTextview == null) {
        break missingId;
      }

      return new RouteDirectionListItemBinding((LinearLayout) rootView, directionsLengthTextview,
          directionsManeuverImageview, directionsTextTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
