// Generated by view binder compiler. Do not edit!
package com.esri.arcgisruntime.opensourceapps.nearbyplaces.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.esri.arcgisruntime.opensourceapps.nearbyplaces.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FilterViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnApply;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final ListView filterView;

  private FilterViewBinding(@NonNull LinearLayout rootView, @NonNull Button btnApply,
      @NonNull Button btnCancel, @NonNull ListView filterView) {
    this.rootView = rootView;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.filterView = filterView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FilterViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FilterViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.filter_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FilterViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApply;
      Button btnApply = rootView.findViewById(id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      Button btnCancel = rootView.findViewById(id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.filterView;
      ListView filterView = rootView.findViewById(id);
      if (filterView == null) {
        break missingId;
      }

      return new FilterViewBinding((LinearLayout) rootView, btnApply, btnCancel, filterView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
