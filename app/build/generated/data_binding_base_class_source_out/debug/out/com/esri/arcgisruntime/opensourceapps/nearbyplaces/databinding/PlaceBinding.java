// Generated by view binder compiler. Do not edit!
package com.esri.arcgisruntime.opensourceapps.nearbyplaces.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import com.esri.arcgisruntime.opensourceapps.nearbyplaces.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlaceBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayoutCompat layoutNameAddress;

  @NonNull
  public final TextView placeAddress;

  @NonNull
  public final TextView placeBearing;

  @NonNull
  public final TextView placeDistance;

  @NonNull
  public final TextView placeName;

  @NonNull
  public final ImageView placeTypeIcon;

  private PlaceBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayoutCompat layoutNameAddress, @NonNull TextView placeAddress,
      @NonNull TextView placeBearing, @NonNull TextView placeDistance, @NonNull TextView placeName,
      @NonNull ImageView placeTypeIcon) {
    this.rootView = rootView;
    this.layoutNameAddress = layoutNameAddress;
    this.placeAddress = placeAddress;
    this.placeBearing = placeBearing;
    this.placeDistance = placeDistance;
    this.placeName = placeName;
    this.placeTypeIcon = placeTypeIcon;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlaceBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.place, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlaceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layoutNameAddress;
      LinearLayoutCompat layoutNameAddress = rootView.findViewById(id);
      if (layoutNameAddress == null) {
        break missingId;
      }

      id = R.id.placeAddress;
      TextView placeAddress = rootView.findViewById(id);
      if (placeAddress == null) {
        break missingId;
      }

      id = R.id.placeBearing;
      TextView placeBearing = rootView.findViewById(id);
      if (placeBearing == null) {
        break missingId;
      }

      id = R.id.placeDistance;
      TextView placeDistance = rootView.findViewById(id);
      if (placeDistance == null) {
        break missingId;
      }

      id = R.id.placeName;
      TextView placeName = rootView.findViewById(id);
      if (placeName == null) {
        break missingId;
      }

      id = R.id.placeTypeIcon;
      ImageView placeTypeIcon = rootView.findViewById(id);
      if (placeTypeIcon == null) {
        break missingId;
      }

      return new PlaceBinding((RelativeLayout) rootView, layoutNameAddress, placeAddress,
          placeBearing, placeDistance, placeName, placeTypeIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
